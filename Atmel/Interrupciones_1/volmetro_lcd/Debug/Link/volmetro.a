;
;
;#include <io.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x01
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x0E
;PCODE: $00000004 VOL: 0
     .EQU __sm_adc_noise_red=0x02 // 26022010_1
;PCODE: $00000005 VOL: 0
	.EQU __sm_powerdown=0x04
;PCODE: $00000006 VOL: 0
	.EQU __sm_powersave=0x06
;PCODE: $00000007 VOL: 0
	.EQU __sm_standby=0x0C
;PCODE: $00000008 VOL: 0
	.EQU __sm_ext_standby=0x0E
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=smcr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <stdio.h>
;#include <delay.h>
;
;#include <alcd.h>
;
;// Declare your global variables here
;float adc=0;
;// Voltage Reference: AREF pin
;#define ADC_VREF_TYPE ((0<<REFS1) | (0<<REFS0) | (0<<ADLAR))
;
;// Read the AD conversion result
;unsigned int read_adc(unsigned char adc_input)
; 0000 0010 {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 0011 ADMUX=(adc_input & 0x1f) | ADC_VREF_TYPE;
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
;	adc_input -> R17
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
; 0000 0012 if (adc_input & 0x20) ADCSRB|=(1<<MUX5);
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
; 0000 0013 else ADCSRB&= ~(1<<MUX5);
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
; 0000 0014 // Delay needed for the stabilization of the ADC input voltage
; 0000 0015 delay_us(10);
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
; 0000 0016 // Start the AD conversion
; 0000 0017 ADCSRA|=(1<<ADSC);
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
; 0000 0018 // Wait for the AD conversion to complete
; 0000 0019 while ((ADCSRA & (1<<ADIF))==0);
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
; 0000 001A ADCSRA|=(1<<ADIF);
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
; 0000 001B return ADCW;
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
; 0000 001C }
;PCODE: $00000031 VOL: 0
;
;unsigned char lcd[8];
;   void main(void)
; 0000 0020 {
;PCODE: $00000032 VOL: 0
; 0000 0021 // Declare your local variables here
; 0000 0022 
; 0000 0023 // Crystal Oscillator division factor: 1
; 0000 0024 #pragma optsize-
; 0000 0025 CLKPR=(1<<CLKPCE);
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
; 0000 0026 CLKPR=(0<<CLKPCE) | (0<<CLKPS3) | (0<<CLKPS2) | (0<<CLKPS1) | (0<<CLKPS0);
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
; 0000 0027 #ifdef _OPTIMIZE_SIZE_
; 0000 0028 #pragma optsize+
; 0000 0029 #endif
; 0000 002A 
; 0000 002B // Input/Output Ports initialization
; 0000 002C // Port B initialization
; 0000 002D // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
; 0000 002E DDRB=(0<<DDB7) | (0<<DDB6) | (0<<DDB5) | (0<<DDB4) | (0<<DDB3) | (0<<DDB2) | (0<<DDB1) | (0<<DDB0);
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
; 0000 002F // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
; 0000 0030 PORTB=(0<<PORTB7) | (0<<PORTB6) | (0<<PORTB5) | (0<<PORTB4) | (0<<PORTB3) | (0<<PORTB2) | (0<<PORTB1) | (0<<PORTB0);
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
; 0000 0031 
; 0000 0032 // Port C initialization
; 0000 0033 // Function: Bit7=In Bit6=In
; 0000 0034 DDRC=(0<<DDC7) | (0<<DDC6);
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
; 0000 0035 // State: Bit7=T Bit6=T
; 0000 0036 PORTC=(0<<PORTC7) | (0<<PORTC6);
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
; 0000 0037 
; 0000 0038 // Port D initialization
; 0000 0039 // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
; 0000 003A DDRD=(0<<DDD7) | (0<<DDD6) | (0<<DDD5) | (0<<DDD4) | (0<<DDD3) | (0<<DDD2) | (0<<DDD1) | (0<<DDD0);
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
; 0000 003B // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
; 0000 003C PORTD=(0<<PORTD7) | (0<<PORTD6) | (0<<PORTD5) | (0<<PORTD4) | (0<<PORTD3) | (0<<PORTD2) | (0<<PORTD1) | (0<<PORTD0);
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
; 0000 003D 
; 0000 003E // Port E initialization
; 0000 003F // Function: Bit6=In Bit2=In
; 0000 0040 DDRE=(0<<DDE6) | (0<<DDE2);
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
; 0000 0041 // State: Bit6=T Bit2=T
; 0000 0042 PORTE=(0<<PORTE6) | (0<<PORTE2);
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
; 0000 0043 
; 0000 0044 // Port F initialization
; 0000 0045 // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit1=In Bit0=In
; 0000 0046 DDRF=(0<<DDF7) | (0<<DDF6) | (0<<DDF5) | (0<<DDF4) | (0<<DDF1) | (0<<DDF0);
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
; 0000 0047 // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit1=T Bit0=T
; 0000 0048 PORTF=(0<<PORTF7) | (0<<PORTF6) | (0<<PORTF5) | (0<<PORTF4) | (0<<PORTF1) | (0<<PORTF0);
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
; 0000 0049 
; 0000 004A PLLCSR=(0<<PINDIV) | (0<<PLLE) | (0<<PLOCK);
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
; 0000 004B PLLFRQ=(0<<PINMUX) | (0<<PLLUSB) | (0<<PLLTM1) | (0<<PLLTM0) | (0<<PDIV3) | (0<<PDIV2) | (0<<PDIV1) | (0<<PDIV0);
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
; 0000 004C 
; 0000 004D // Timer/Counter 0 initialization
; 0000 004E // Clock source: System Clock
; 0000 004F // Clock value: Timer 0 Stopped
; 0000 0050 // Mode: Normal top=0xFF
; 0000 0051 // OC0A output: Disconnected
; 0000 0052 // OC0B output: Disconnected
; 0000 0053 TCCR0A=(0<<COM0A1) | (0<<COM0A0) | (0<<COM0B1) | (0<<COM0B0) | (0<<WGM01) | (0<<WGM00);
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
; 0000 0054 TCCR0B=(0<<WGM02) | (0<<CS02) | (0<<CS01) | (0<<CS00);
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
; 0000 0055 TCNT0=0x00;
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
; 0000 0056 OCR0A=0x00;
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
; 0000 0057 OCR0B=0x00;
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
; 0000 0058 
; 0000 0059 // Timer/Counter 1 initialization
; 0000 005A // Clock source: System Clock
; 0000 005B // Clock value: Timer1 Stopped
; 0000 005C // Mode: Normal top=0xFFFF
; 0000 005D // OC1A output: Disconnected
; 0000 005E // OC1B output: Disconnected
; 0000 005F // OC1C output: Disconnected
; 0000 0060 // Noise Canceler: Off
; 0000 0061 // Input Capture on Falling Edge
; 0000 0062 // Timer1 Overflow Interrupt: Off
; 0000 0063 // Input Capture Interrupt: Off
; 0000 0064 // Compare A Match Interrupt: Off
; 0000 0065 // Compare B Match Interrupt: Off
; 0000 0066 // Compare C Match Interrupt: Off
; 0000 0067 TCCR1A=(0<<COM1A1) | (0<<COM1A0) | (0<<COM1B1) | (0<<COM1B0) | (0<<COM1C1) | (0<<COM1C0) | (0<<WGM11) | (0<<WGM10);
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
; 0000 0068 TCCR1B=(0<<ICNC1) | (0<<ICES1) | (0<<WGM13) | (0<<WGM12) | (0<<CS12) | (0<<CS11) | (0<<CS10);
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
; 0000 0069 TCNT1H=0x00;
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
; 0000 006A TCNT1L=0x00;
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
; 0000 006B ICR1H=0x00;
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
; 0000 006C ICR1L=0x00;
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
; 0000 006D OCR1AH=0x00;
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
; 0000 006E OCR1AL=0x00;
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
; 0000 006F OCR1BH=0x00;
;PCODE: $00000069 VOL: 0
;PCODE: $0000006A VOL: 0
; 0000 0070 OCR1BL=0x00;
;PCODE: $0000006B VOL: 0
;PCODE: $0000006C VOL: 0
; 0000 0071 OCR1CH=0x00;
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
; 0000 0072 OCR1CL=0x00;
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
; 0000 0073 
; 0000 0074 // Timer/Counter 3 initialization
; 0000 0075 // Clock source: System Clock
; 0000 0076 // Clock value: Timer3 Stopped
; 0000 0077 // Mode: Normal top=0xFFFF
; 0000 0078 // OC3A output: Disconnected
; 0000 0079 // OC3B output: Disconnected
; 0000 007A // OC3C output: Disconnected
; 0000 007B // Noise Canceler: Off
; 0000 007C // Input Capture on Falling Edge
; 0000 007D // Timer3 Overflow Interrupt: Off
; 0000 007E // Input Capture Interrupt: Off
; 0000 007F // Compare A Match Interrupt: Off
; 0000 0080 // Compare B Match Interrupt: Off
; 0000 0081 // Compare C Match Interrupt: Off
; 0000 0082 TCCR3A=(0<<COM3A1) | (0<<COM3A0) | (0<<COM3B1) | (0<<COM3B0) | (0<<COM3C1) | (0<<COM3C0) | (0<<WGM31) | (0<<WGM30);
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
; 0000 0083 TCCR3B=(0<<ICNC3) | (0<<ICES3) | (0<<WGM33) | (0<<WGM32) | (0<<CS32) | (0<<CS31) | (0<<CS30);
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
; 0000 0084 TCNT3H=0x00;
;PCODE: $00000075 VOL: 0
;PCODE: $00000076 VOL: 0
; 0000 0085 TCNT3L=0x00;
;PCODE: $00000077 VOL: 0
;PCODE: $00000078 VOL: 0
; 0000 0086 ICR3H=0x00;
;PCODE: $00000079 VOL: 0
;PCODE: $0000007A VOL: 0
; 0000 0087 ICR3L=0x00;
;PCODE: $0000007B VOL: 0
;PCODE: $0000007C VOL: 0
; 0000 0088 OCR3AH=0x00;
;PCODE: $0000007D VOL: 0
;PCODE: $0000007E VOL: 0
; 0000 0089 OCR3AL=0x00;
;PCODE: $0000007F VOL: 0
;PCODE: $00000080 VOL: 0
; 0000 008A OCR3BH=0x00;
;PCODE: $00000081 VOL: 0
;PCODE: $00000082 VOL: 0
; 0000 008B OCR3BL=0x00;
;PCODE: $00000083 VOL: 0
;PCODE: $00000084 VOL: 0
; 0000 008C OCR3CH=0x00;
;PCODE: $00000085 VOL: 0
;PCODE: $00000086 VOL: 0
; 0000 008D OCR3CL=0x00;
;PCODE: $00000087 VOL: 0
;PCODE: $00000088 VOL: 0
; 0000 008E 
; 0000 008F // Timer/Counter 4 initialization
; 0000 0090 // Clock: Timer4 Stopped
; 0000 0091 // Mode: Normal top=OCR4C
; 0000 0092 // OC4A output: OC4A=Disc. /OC4A=Disc.
; 0000 0093 // OC4B output: OC4B=Disc. /OC4B=Disc.
; 0000 0094 // OC4D output: OC4D=Disc. /OC4D=Disc.
; 0000 0095 // Fault Protection: Off
; 0000 0096 // Fault Protection Noise Canceler: Off
; 0000 0097 // Fault Protection triggered on Falling Edge
; 0000 0098 // Timer4 Overflow Interrupt: Off
; 0000 0099 // Compare A Match Interrupt: Off
; 0000 009A // Compare B Match Interrupt: Off
; 0000 009B // Compare D Match Interrupt: Off
; 0000 009C // Fault Protection Interrupt: Off
; 0000 009D // Dead Time Prescaler: 1
; 0000 009E // Dead Time Rising Edge: 0.000 us
; 0000 009F // Dead Time Falling Edge: 0.000 us
; 0000 00A0 
; 0000 00A1 // Set Timer4 for synchronous operation
; 0000 00A2 PLLFRQ&=(1<<PINMUX) | (1<<PLLUSB) | (0<<PLLTM1) | (0<<PLLTM0) | (1<<PDIV3) | (1<<PDIV2) | (1<<PDIV1) | (1<<PDIV0);
;PCODE: $00000089 VOL: 0
;PCODE: $0000008A VOL: 0
;PCODE: $0000008B VOL: 0
; 0000 00A3 
; 0000 00A4 TCCR4A=(0<<COM4A1) | (0<<COM4A0) | (0<<COM4B1) | (0<<COM4B0) | (0<<FOC4A) | (0<<FOC4B) | (0<<PWM4A) | (0<<PWM4B);
;PCODE: $0000008C VOL: 0
;PCODE: $0000008D VOL: 0
; 0000 00A5 TCCR4B=(0<<PWM4X) | (0<<PSR4) | (0<<DTPS41) | (0<<DTPS40) | (0<<CS43) | (0<<CS42) | (0<<CS41) | (0<<CS40);
;PCODE: $0000008E VOL: 0
;PCODE: $0000008F VOL: 0
; 0000 00A6 TCCR4C=(0<<COM4A1S) | (0<<COM4A0S) | (0<<COM4B1S) | (0<<COM4B0S) | (0<<COM4D1) | (0<<COM4D0) | (0<<FOC4D) | (0<<PWM4D);
;PCODE: $00000090 VOL: 0
;PCODE: $00000091 VOL: 0
; 0000 00A7 TCCR4D=(0<<FPIE4) | (0<<FPEN4) | (0<<FPNC4) | (0<<FPES4) | (0<<FPAC4) | (0<<FPF4) | (0<<WGM41) | (0<<WGM40);
;PCODE: $00000092 VOL: 0
;PCODE: $00000093 VOL: 0
; 0000 00A8 TCCR4E=(0<<TLOCK4) | (0<<ENHC4) | (0<<OC4OE5) | (0<<OC4OE4) | (0<<OC4OE3) | (0<<OC4OE2) | (0<<OC4OE1) | (0<<OC4OE0);
;PCODE: $00000094 VOL: 0
;PCODE: $00000095 VOL: 0
; 0000 00A9 TC4H=0x00;
;PCODE: $00000096 VOL: 0
;PCODE: $00000097 VOL: 0
; 0000 00AA TCNT4=0x00;
;PCODE: $00000098 VOL: 0
;PCODE: $00000099 VOL: 0
; 0000 00AB TC4H=0x00;
;PCODE: $0000009A VOL: 0
;PCODE: $0000009B VOL: 0
; 0000 00AC OCR4A=0x00;
;PCODE: $0000009C VOL: 0
;PCODE: $0000009D VOL: 0
; 0000 00AD TC4H=0x00;
;PCODE: $0000009E VOL: 0
;PCODE: $0000009F VOL: 0
; 0000 00AE OCR4B=0x00;
;PCODE: $000000A0 VOL: 0
;PCODE: $000000A1 VOL: 0
; 0000 00AF TC4H=0x00;
;PCODE: $000000A2 VOL: 0
;PCODE: $000000A3 VOL: 0
; 0000 00B0 OCR4C=0x00;
;PCODE: $000000A4 VOL: 0
;PCODE: $000000A5 VOL: 0
; 0000 00B1 TC4H=0x00;
;PCODE: $000000A6 VOL: 0
;PCODE: $000000A7 VOL: 0
; 0000 00B2 OCR4D=0x00;
;PCODE: $000000A8 VOL: 0
;PCODE: $000000A9 VOL: 0
; 0000 00B3 DT4=0x00;
;PCODE: $000000AA VOL: 0
;PCODE: $000000AB VOL: 0
; 0000 00B4 
; 0000 00B5 // Timer/Counter 0 Interrupt(s) initialization
; 0000 00B6 TIMSK0=(0<<OCIE0B) | (0<<OCIE0A) | (0<<TOIE0);
;PCODE: $000000AC VOL: 0
;PCODE: $000000AD VOL: 0
; 0000 00B7 
; 0000 00B8 // Timer/Counter 1 Interrupt(s) initialization
; 0000 00B9 TIMSK1=(0<<ICIE1) | (0<<OCIE1C) | (0<<OCIE1B) | (0<<OCIE1A) | (0<<TOIE1);
;PCODE: $000000AE VOL: 0
;PCODE: $000000AF VOL: 0
; 0000 00BA 
; 0000 00BB // Timer/Counter 3 Interrupt(s) initialization
; 0000 00BC TIMSK3=(0<<ICIE3) | (0<<OCIE3C) | (0<<OCIE3B) | (0<<OCIE3A) | (0<<TOIE3);
;PCODE: $000000B0 VOL: 0
;PCODE: $000000B1 VOL: 0
; 0000 00BD 
; 0000 00BE // Timer/Counter 4 Interrupt(s) initialization
; 0000 00BF TIMSK4=(0<<OCIE4D) | (0<<OCIE4A) | (0<<OCIE4B) | (0<<TOIE4);
;PCODE: $000000B2 VOL: 0
;PCODE: $000000B3 VOL: 0
; 0000 00C0 
; 0000 00C1 // External Interrupt(s) initialization
; 0000 00C2 // INT0: Off
; 0000 00C3 // INT1: Off
; 0000 00C4 // INT2: Off
; 0000 00C5 // INT3: Off
; 0000 00C6 // INT6: Off
; 0000 00C7 EICRA=(0<<ISC31) | (0<<ISC30) | (0<<ISC21) | (0<<ISC20) | (0<<ISC11) | (0<<ISC10) | (0<<ISC01) | (0<<ISC00);
;PCODE: $000000B4 VOL: 0
;PCODE: $000000B5 VOL: 0
; 0000 00C8 EICRB=(0<<ISC61) | (0<<ISC60);
;PCODE: $000000B6 VOL: 0
;PCODE: $000000B7 VOL: 0
; 0000 00C9 EIMSK=(0<<INT6) | (0<<INT3) | (0<<INT2) | (0<<INT1) | (0<<INT0);
;PCODE: $000000B8 VOL: 0
;PCODE: $000000B9 VOL: 0
; 0000 00CA // PCINT0 interrupt: Off
; 0000 00CB // PCINT1 interrupt: Off
; 0000 00CC // PCINT2 interrupt: Off
; 0000 00CD // PCINT3 interrupt: Off
; 0000 00CE // PCINT4 interrupt: Off
; 0000 00CF // PCINT5 interrupt: Off
; 0000 00D0 // PCINT6 interrupt: Off
; 0000 00D1 // PCINT7 interrupt: Off
; 0000 00D2 PCMSK0=(0<<PCINT7) | (0<<PCINT6) | (0<<PCINT5) | (0<<PCINT4) | (0<<PCINT3) | (0<<PCINT2) | (0<<PCINT1) | (0<<PCINT0);
;PCODE: $000000BA VOL: 0
;PCODE: $000000BB VOL: 0
; 0000 00D3 PCICR=(0<<PCIE0);
;PCODE: $000000BC VOL: 0
;PCODE: $000000BD VOL: 0
; 0000 00D4 
; 0000 00D5 // USART1 initialization
; 0000 00D6 // USART1 disabled
; 0000 00D7 UCSR1B=(0<<RXCIE1) | (0<<TXCIE1) | (0<<UDRIE1) | (0<<RXEN1) | (0<<TXEN1) | (0<<UCSZ12) | (0<<RXB81) | (0<<TXB81);
;PCODE: $000000BE VOL: 0
;PCODE: $000000BF VOL: 0
; 0000 00D8 
; 0000 00D9 // Analog Comparator initialization
; 0000 00DA // Analog Comparator: Off
; 0000 00DB // The Analog Comparator's positive input is
; 0000 00DC // connected to the AIN0 pin
; 0000 00DD // The Analog Comparator's negative input is
; 0000 00DE // connected to the AIN1 pin
; 0000 00DF ACSR=(1<<ACD) | (0<<ACBG) | (0<<ACO) | (0<<ACI) | (0<<ACIE) | (0<<ACIC) | (0<<ACIS1) | (0<<ACIS0);
;PCODE: $000000C0 VOL: 0
;PCODE: $000000C1 VOL: 0
; 0000 00E0 // Digital input buffer on AIN0: On
; 0000 00E1 DIDR1=(0<<AIN0D);
;PCODE: $000000C2 VOL: 0
;PCODE: $000000C3 VOL: 0
; 0000 00E2 
; 0000 00E3 // ADC initialization
; 0000 00E4 // ADC Clock frequency: 998.875 kHz
; 0000 00E5 // ADC Voltage Reference: AREF pin
; 0000 00E6 // ADC High Speed Mode: Off
; 0000 00E7 // ADC Auto Trigger Source: ADC Stopped
; 0000 00E8 // Digital input buffers on ADC0: On, ADC1: On
; 0000 00E9 // ADC4: On, ADC5: On, ADC6: On, ADC7: On
; 0000 00EA DIDR0=(0<<ADC7D) | (0<<ADC6D) | (0<<ADC5D) | (0<<ADC4D) | (0<<ADC1D) | (0<<ADC0D);
;PCODE: $000000C4 VOL: 0
;PCODE: $000000C5 VOL: 0
; 0000 00EB // Digital input buffers on ADC8: On, ADC9: On, ADC10: On, ADC11: On
; 0000 00EC // ADC12: On, ADC13: On
; 0000 00ED DIDR2=(0<<ADC13D) | (0<<ADC12D) | (0<<ADC11D) | (0<<ADC10D) | (0<<ADC9D) | (0<<ADC8D);
;PCODE: $000000C6 VOL: 0
;PCODE: $000000C7 VOL: 0
; 0000 00EE ADMUX=    ADC_VREF_TYPE;
;PCODE: $000000C8 VOL: 0
;PCODE: $000000C9 VOL: 0
; 0000 00EF ADCSRA=(1<<ADEN) | (0<<ADSC) | (0<<ADATE) | (0<<ADIF) | (0<<ADIE) | (0<<ADPS2) | (1<<ADPS1) | (1<<ADPS0);
;PCODE: $000000CA VOL: 0
;PCODE: $000000CB VOL: 0
; 0000 00F0 ADCSRB=(1<<ADHSM) | (0<<MUX5) | (0<<ADTS3) | (0<<ADTS2) | (0<<ADTS1) | (0<<ADTS0);
;PCODE: $000000CC VOL: 0
;PCODE: $000000CD VOL: 0
; 0000 00F1 
; 0000 00F2 // SPI initialization
; 0000 00F3 // SPI disabled
; 0000 00F4 SPCR=(0<<SPIE) | (0<<SPE) | (0<<DORD) | (0<<MSTR) | (0<<CPOL) | (0<<CPHA) | (0<<SPR1) | (0<<SPR0);
;PCODE: $000000CE VOL: 0
;PCODE: $000000CF VOL: 0
; 0000 00F5 
; 0000 00F6 // TWI initialization
; 0000 00F7 // TWI disabled
; 0000 00F8 TWCR=(0<<TWEA) | (0<<TWSTA) | (0<<TWSTO) | (0<<TWEN) | (0<<TWIE);
;PCODE: $000000D0 VOL: 0
;PCODE: $000000D1 VOL: 0
; 0000 00F9 
; 0000 00FA // Alphanumeric LCD initialization
; 0000 00FB // Connections are specified in the
; 0000 00FC // Project|Configure|C Compiler|Libraries|Alphanumeric LCD menu:
; 0000 00FD // RS - PORTB Bit 0
; 0000 00FE // RD - PORTB Bit 1
; 0000 00FF // EN - PORTB Bit 2
; 0000 0100 // D4 - PORTB Bit 4
; 0000 0101 // D5 - PORTB Bit 5
; 0000 0102 // D6 - PORTB Bit 6
; 0000 0103 // D7 - PORTB Bit 7
; 0000 0104 // Characters/line: 8
; 0000 0105 lcd_init(8);
;PCODE: $000000D2 VOL: 0
;PCODE: $000000D3 VOL: 0
; 0000 0106 
; 0000 0107 while (1)
;PCODE: $000000D4 VOL: 0
; 0000 0108       {
; 0000 0109 
; 0000 010A 
; 0000 010B       adc=read_adc(0)/200.6;
;PCODE: $000000D5 VOL: 0
;PCODE: $000000D6 VOL: 0
;PCODE: $000000D7 VOL: 0
;PCODE: $000000D8 VOL: 0
;PCODE: $000000D9 VOL: 0
;PCODE: $000000DA VOL: 0
;PCODE: $000000DB VOL: 0
; 0000 010C       lcd_clear();
;PCODE: $000000DC VOL: 0
; 0000 010D       lcd_gotoxy(2,1);
;PCODE: $000000DD VOL: 0
;PCODE: $000000DE VOL: 0
;PCODE: $000000DF VOL: 0
;PCODE: $000000E0 VOL: 0
; 0000 010E        lcd_gotoxy(0,0);
;PCODE: $000000E1 VOL: 0
;PCODE: $000000E2 VOL: 0
;PCODE: $000000E3 VOL: 0
;PCODE: $000000E4 VOL: 0
; 0000 010F       lcd_puts("voltaje:");
;PCODE: $000000E5 VOL: 0
;PCODE: $000000E6 VOL: 0
;PCODE: $000000E7 VOL: 0
; 0000 0110 
; 0000 0111       sprintf(lcd,"%5.2f",adc);
;PCODE: $000000E8 VOL: 0
;PCODE: $000000E9 VOL: 0
;PCODE: $000000EA VOL: 0
;PCODE: $000000EB VOL: 0
;PCODE: $000000EC VOL: 0
;PCODE: $000000ED VOL: 0
;PCODE: $000000EE VOL: 0
;PCODE: $000000EF VOL: 0
;PCODE: $000000F0 VOL: 0
;PCODE: $000000F1 VOL: 0
;PCODE: $000000F2 VOL: 0
; 0000 0112       lcd_puts(lcd);
;PCODE: $000000F3 VOL: 0
;PCODE: $000000F4 VOL: 0
; 0000 0113       delay_ms(500);
;PCODE: $000000F5 VOL: 0
;PCODE: $000000F6 VOL: 0
; 0000 0114 
; 0000 0115 
; 0000 0116 
; 0000 0117  }
;PCODE: $000000F7 VOL: 0
;PCODE: $000000F8 VOL: 0
; 0000 0118 }
;PCODE: $000000F9 VOL: 0
;PCODE: $000000FA VOL: 0
;PCODE: $000000FB VOL: 0

	.DSEG
_0xB:
	.BYTE 0x9
